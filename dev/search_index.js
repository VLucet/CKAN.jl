var documenterSearchIndex = {"docs":
[{"location":"#CKANQuerry.jl","page":"CKANQuerry.jl","title":"CKANQuerry.jl","text":"","category":"section"},{"location":"","page":"CKANQuerry.jl","title":"CKANQuerry.jl","text":"Documentation for CKANQuerry.jl","category":"page"},{"location":"","page":"CKANQuerry.jl","title":"CKANQuerry.jl","text":"Modules = [CKANQuerry]","category":"page"},{"location":"#CKANQuerry.CKANConnection","page":"CKANQuerry.jl","title":"CKANQuerry.CKANConnection","text":"CKANConnection(url::String)\nCKANConnection(url::String, apiversion::Int)\n\nCreates a CKANConnection object with an API url,  by first checking that the  url is valid (i.e. return a status value of 200). An API version number (Int)  can be specified. If not specified, the \"connection\" will use the latest  version of the target API.\n\n\n\n\n\n","category":"type"},{"location":"#CKANQuerry.CKANDataset","page":"CKANQuerry.jl","title":"CKANQuerry.CKANDataset","text":"CKANDataset(connection::CKANConnection, id::String, metadata::Dict, resources::Union{Array{CKANResource}, Array{String}})\n\nCreates a CKANDataset object. Datasets (i.e. packages) are the main objects in CKAN. CKANDataset objects usually contains one or more CKANResource objects.\n\n\n\n\n\n","category":"type"},{"location":"#CKANQuerry.CKANResource","page":"CKANQuerry.jl","title":"CKANQuerry.CKANResource","text":"CKANResource(connection::CKANConnection, id::String, datasetid::String, metadata::Dict\n\nCreates a CKANResource objetcs. Ressources are usually containes in CKAN datasets (i.e. packages). \n\n\n\n\n\n","category":"type"},{"location":"#Base.show-Tuple{IO, CKANConnection}","page":"CKANQuerry.jl","title":"Base.show","text":"Base.show(io::IO, connection::CKANConnection)\n\nPrint a CKANConnection to the given IO.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, CKANDataset}","page":"CKANQuerry.jl","title":"Base.show","text":"Base.show(io::IO, dataset::CKANDataset)\n\nPrint a CKANDataset to the given IO.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, CKANResource}","page":"CKANQuerry.jl","title":"Base.show","text":"Base.show(io::IO, resource::CKANResource)\n\nPrint a CKANResource to the given IO.\n\n\n\n\n\n","category":"method"},{"location":"#CKANQuerry.generate_request_query-Tuple{Vararg{Pair, N} where N}","page":"CKANQuerry.jl","title":"CKANQuerry.generate_request_query","text":"generate_request_query(parameters::Pair...)\n\nCopied from Mangal.jl, formats a query string for use in a url, from a set of  Pairs.\n\n\n\n\n\n","category":"method"},{"location":"#CKANQuerry.http_get-Tuple{String}","page":"CKANQuerry.jl","title":"CKANQuerry.http_get","text":"http_get(url::String)\n\nPerform GET request on url and return the response.\n\n\n\n\n\n","category":"method"},{"location":"#CKANQuerry.make_api_url-Tuple{String}","page":"CKANQuerry.jl","title":"CKANQuerry.make_api_url","text":"make_api_url(root::String)\nmake_api_url(root::String, apiversion::Int)\n\nProduce a GETable api url. Root is the base url, apiversion is the version of  the api to use. If apiversion is not specified, the default behavior when a  querry is performed is to use the latest version.\n\n\n\n\n\n","category":"method"},{"location":"#CKANQuerry.parse_body-Tuple{HTTP.Messages.Response}","page":"CKANQuerry.jl","title":"CKANQuerry.parse_body","text":"parse_body(response::HTTP.Messages.Response)\n\nParse the body of a HTTP response.\n\n\n\n\n\n","category":"method"},{"location":"#CKANQuerry.querry_api-Tuple{String, String, Vararg{Pair, N} where N}","page":"CKANQuerry.jl","title":"CKANQuerry.querry_api","text":"querry_api(url::String, action::String, parameters::Dict)\n\nQuerry an API with the given parameters, for a given CKAN action.\n\n\n\n\n\n","category":"method"},{"location":"#CKANQuerry.shorten_url","page":"CKANQuerry.jl","title":"CKANQuerry.shorten_url","text":"shorten_url(url::String, squeeze::Int=20)\n\nShorten the url for printing.\n\n\n\n\n\n","category":"function"},{"location":"#CKANQuerry.test_url-Tuple{String}","page":"CKANQuerry.jl","title":"CKANQuerry.test_url","text":"test_url(url::String)\n\nTest url validity.\n\n\n\n\n\n","category":"method"}]
}
